How did viewing a diff between two versions of a file help you see the bug that was introduced?

Viewing a diff let me compare to versions of the same code side by side.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Having access to the entire history of a file lets you go back to a previous design, if you take a fork that proves unproductive.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Pro: Almost all versions will be logically coherent.
Con: Easy to forget to commit.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git assumes that saves are for application verion control, while GoogleDocs assumes that saves are for individual files.

How can you use the commands git log and git diff to view the history of files?

git log shows all commits.  git diff shows the difference between two files.

How might using version control make you more confident to make changes that could break something?

Because it makes it easy to go back, and to discern what is (and what is not) casuing the problem.

Now that you have your workspace set up, what do you want to try using Git for?

To accelerate my programming development.





How might using version control make you more confident to make changes that could break something?

Because it makes it easy to go back, and to discern what is casuing the problem